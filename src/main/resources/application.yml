jwt:
  secret:
    key: ${JWT_KEY}

---
spring:
  config:
    activate:
      on-profile:
        - local
        - prod

  jpa:
    defer-datasource-initialization: false
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
        default_batch_fetch_size: 100
      open-in-view: false
      database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: ${DDL_MODE}

  sql:
    init:
      mode: always

  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://${DB_IP}:${DB_PORT}/tmeroom
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  # 메일 관련 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GMAIL_ADDRESS}
    password: ${GMAIL_PASSWORD}
    transport:
      protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  # S3 설정
cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    s3:
      bucket: ${BUCKET_NAME}
      dir: /image
    region:
      static: ap-northeast-2
    stack:
      auto: false

---

spring:
  config:
    activate:
      on-profile: test
  jpa:
    defer-datasource-initialization: false
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
    database-platform: org.hibernate.dialect.H2Dialect

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;MODE=MySQL;
    username: SA
    password:

  sql:
    init:
      mode: never

# 메일 관련 설정
  mail:
    host: localhost
    port: 3025
    username: tester@test.com
    password: tester
    transport:
      protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


# Redis 설정
  data:
    redis:
      host: localhost
      port: 6379

  # S3 설정
cloud:
  aws:
    credentials:
      accessKey: AWS_ACCESS_KEY_ID
      secretKey: AWS_SECRET_ACCESS_KEY
    s3:
      bucket: BUCKET_NAME
      dir: /image
    region:
      static: ap-northeast-2
    stack:
      auto: false